# -*- mode: snippet; require-final-newline: nil -*-
# name: UVM component parameterized sequencer
# key: uvc_p_seqr
# group: UVC
# --

\`ifndef ${1:$(upcase yas-text)}_SEQUENCER__SV
 \`define ${1:$(upcase yas-text)}_SEQUENCER__SV
class ${1:`(get-pkg-name (get-buffer-name))`}_sequencer#(
   ${2:parameters}
   )
   extends uvm_sequencer #($1_item#(${2:$(make-parameter-assign-list (parse-parameters yas-text))}));

   typedef $1_sequencer#(${2:$(make-parameter-assign-list (parse-parameters yas-text))}) $1_sequencer_t;
   // typedef $1_config#(${2:$(make-parameter-assign-list (parse-parameters yas-text))}) $1_config_t;

   \`uvm_component_param_utils($1_sequencer_t)

   function new(string name, uvm_component parent);
      super.new(name, parent);
   endfunction : new

endclass : $1_sequencer

\`endif // ${1:$(upcase yas-text)}_SEQUENCER__SV