# -*- mode: snippet; require-final-newline: nil -*-
# name: UVC concrete interface
# key: uvc_con_if
# group: UVC
# --

\`ifndef ${1:$(upcase yas-text)}_INTERFACE__SV
\`define ${1:$(upcase yas-text)}_INTERFACE__SV

interface ${1:`(get-pkg-name (get-buffer-name))`}_if #(string P_NAME = "$1")
   (input bit clk,
    input bit rst);

   import $1_abs_if_pkg::*;

   $0
   
   // bit dc;

class concrete_if extends $1_abs_if;
   function new(string name="");
      super.new(name);
   endfunction : new

   // Wait for signals
   task wait_for_reset();
      if (!rst)
        @(posedge rst);
   endtask : wait_for_reset

   task wait_for_reset_release();
      if (rst)
        @(negedge rst);
   endtask : wait_for_reset_release

   task wait_for_clock(int n=1);
      repeat(n)
        @(posedge clk);
   endtask : wait_for_clock

   task reset_signals();
      wait_for_reset;
      // dc     <= 0;
      @(posedge clk);
      wait_for_reset_release;
   endtask : reset_signals

   task write();
      // dc     <= 0;
   endtask : write
   
   task read();
      // dc     <= 0;
   endtask : read

endclass : concrete_if

   concrete_if concrete_inst;
   
   function $1_abs_if get_concrete_inst();
      concrete_inst = new(P_NAME);
      return concrete_inst;
   endfunction // get_concrete_inst

endinterface : $1_if

\`endif // \`ifndef ${1:$(upcase yas-text)}_INTERFACE__SV